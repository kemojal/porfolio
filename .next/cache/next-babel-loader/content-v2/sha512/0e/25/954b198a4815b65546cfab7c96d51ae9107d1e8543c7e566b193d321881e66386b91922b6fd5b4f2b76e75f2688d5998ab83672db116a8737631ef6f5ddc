{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kemojallow/Documents/DPS/porfolio/components/Settings.js\";\nimport React, { useState } from 'react';\nimport styled, { keyframes, css } from 'styled-components';\nimport { motion } from 'framer-motion'; //import GearIcon  from '/assets/imgs/gear.svg';\n\nimport DarkIcon from './svg/DarkIcon';\nimport LightIcon from './svg/LightIcon'; // const fadeIn = keyframes`\n//   0% {\n//     opacity: 0;\n//   }\n//   40% {\n//     opacity: 1;\n//   }\n//   60% {\n//     opacity: 1;\n//   }\n//   100% {\n//     opacity: 0;\n//   }\n// `\n// const flash = keyframes`\n//   from {\n//       opacity: 0;\n//       }\n//       to {\n//       opacity: 1;\n//       }\n// `;\n\nconst ToggleThemeContainer = styled(motion.div)`\n position: fixed;\n /* background-color: brown; */\n background: ${({\n  theme\n}) => theme.text};\n /* width: 100px;\n height: 100px; */\n /* bottom: 2rem;\n left: 2rem; */\n top: 0.5rem;\n /* right: 5rem; */\n right: 9rem;\n display: flex;\n align-items: center;\n justify-content: center;\n background-color:transparent;\n z-index: 3000;\n\n @media (min-width: 768px) {\n    /* right: 2rem; */\n    right: 23px;\n    top: 1.56rem;\n  }\n\n  @media ( min-width: 1200px) {\n    right: calc(( (100% - 1100px) / 2) - 70px);\n   }\n`;\nconst GearButton = styled.button`\nborder: none;\n/* width: 44px;\nheight: 44px; */\nwidth: 32px;\nheight: 32px;\n\nwidth: 84px;\nheight: 44px;\n\n\ncursor: pointer;\noverflow: hidden;\nborder: none;\nborder-radius: 50%;\nbackground-color: transparent;\noutline: 0px;\nfont-size: 100%;\nline-height: 1.15;\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\nbackdrop-filter: blur(20px);\ntransition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\nborder-radius: 49px;\n    padding: 6.5px;\n    /* border: 1px solid ${({\n  theme\n}) => theme.themeToggleButtonBorder}; */\n    background-color: transparent;\n\n\n    background-color: ${({\n  theme\n}) => theme === 'light' ? 'rgba(0,0,0,.07)' : `rgba(255, 255, 255, 0.11)`};\n\n  /* box-shadow: inset 0px -1px 1px ${({\n  theme\n}) => theme.navShadowColor} !important; */\n position: relative;\n  .icon-container {\n      width: 36px;\n      height: 36px;\n      border-radius: 50%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      margin: 0px;\n       /* background-color: orange; */\n  }\n  .left {\n    background-color: ${({\n  theme\n}) => theme === 'light' ? 'white' : `transparent`};\n  }\n  .right {\n    background-color: ${({\n  theme\n}) => theme === 'light' ? `transparent` : 'white'};\n  }\n  &:hover{\n      outline: none;\n      /* transform: rotate(180deg); */\n      /* background-color: green; */\n  }\n  &:focus {\n    outline: 0 !important;\n    /* border: none; */\n}\n&:before {\n    transition: transform .2s ease-in-out;\n    /* will-change: transform; */\n    /* width: 36px; */\n    /* height: calc(100% - 8px); */\n    position: absolute;\n    /* left: 4px; */\n    /* top: 4px; */\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    display: block;\n    border-radius: 9999px;\n    content: \"\";\n    /* background-color: #fff; */\n    box-shadow: 0 2px 8px 0 rgb(0 34 255 / 8%), 0 2px 8px 0 rgb(0 11 80 / 12%);\n}\n`;\nconst Effect = styled.div`\n    position: absolute;\n    left: ${({\n  theme\n}) => theme === 'light' ? '4px' : `40px`};;\n    width: 40px;\n      height: 40px;\n      border-radius: 50%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      margin: 0px;\n      background: white;\n      background: #00000030;\n      backdrop-filter: blur(20px);\n      pointer-events:  none;\n      opacity: 1;\n      z-index: -1;\n      transition: all .2s ease-out;\n      /* animation: ${props => props.animate && css`\n      ${fadeIn} 0.2s linear 3\n    `}; */\n`;\n\nconst Settings = ({\n  theme,\n  toggleTheme\n}) => {\n  /* const [doAnimate, setDoAnimate] = useState(false); */\n  return /*#__PURE__*/_jsxDEV(ToggleThemeContainer, {\n    children: /*#__PURE__*/_jsxDEV(GearButton, {\n      theme: theme,\n      onClick: toggleTheme,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-container left\",\n        children: /*#__PURE__*/_jsxDEV(LightIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-container right\",\n        children: /*#__PURE__*/_jsxDEV(DarkIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Effect, {\n        theme: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Settings;","map":{"version":3,"sources":["/Users/kemojallow/Documents/DPS/porfolio/components/Settings.js"],"names":["React","useState","styled","keyframes","css","motion","DarkIcon","LightIcon","ToggleThemeContainer","div","theme","text","GearButton","button","themeToggleButtonBorder","navShadowColor","Effect","props","animate","fadeIn","Settings","toggleTheme"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAkBC,SAAlB,EAA6BC,GAA7B,QAAyC,mBAAzC;AACA,SAASC,MAAT,QAAuB,eAAvB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,SAAP,MAAsB,iBAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,oBAAoB,GAAGN,MAAM,CAACG,MAAM,CAACI,GAAR,CAAa;AAChD;AACA;AACA,eAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,IAAK;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BA;AA2BA,MAAMC,UAAU,GAAGV,MAAM,CAACW,MAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACI,uBAAwB;AACxE;AACA;AACA;AACA,wBAAwB,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KACpBA,KAAK,KAAK,OAAV,GAAoB,iBAApB,GAAyC,2BAA2B;AACxE;AACA,sCAAsC,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACK,cAAe;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,CAAC;AAAEL,EAAAA;AAAF,CAAD,KACpBA,KAAK,KAAK,OAAV,GAAoB,OAApB,GAA+B,aAAa;AAChD;AACA;AACA,wBAAwB,CAAC;AAAEA,EAAAA;AAAF,CAAD,KACpBA,KAAK,KAAK,OAAV,GAAqB,aAArB,GAAoC,OAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhFA;AAkFA,MAAMM,MAAM,GAAGd,MAAM,CAACO,GAAI;AAC1B;AACA,YAAY,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACRA,KAAK,KAAK,OAAV,GAAoB,KAApB,GAA6B,MAAM;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsBO,KAAK,IACvBA,KAAK,CAACC,OAAN,IACAd,GAAI;AACR,QAAQe,MAAO;AACf,KAAM;AACN,CAvBA;;AAyBA,MAAMC,QAAQ,GAAG,CAAC;AAACV,EAAAA,KAAD;AAASW,EAAAA;AAAT,CAAD,KAA4B;AACzC;AACA,sBACI,QAAC,oBAAD;AAAA,2BACI,QAAC,UAAD;AACA,MAAA,KAAK,EAAEX,KADP;AAEA,MAAA,OAAO,EAAEW,WAFT;AAAA,8BAIJ;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJI,eAOJ;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPI,eAaI,QAAC,MAAD;AACA,QAAA,KAAK,EAAEX;AADP;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAzBD;;AA2BA,eAAeU,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport styled,  { keyframes, css }  from 'styled-components';\nimport { motion } from 'framer-motion';\n\n//import GearIcon  from '/assets/imgs/gear.svg';\nimport DarkIcon from './svg/DarkIcon';\nimport LightIcon from './svg/LightIcon';\n\n// const fadeIn = keyframes`\n//   0% {\n//     opacity: 0;\n//   }\n//   40% {\n//     opacity: 1;\n//   }\n//   60% {\n//     opacity: 1;\n//   }\n//   100% {\n//     opacity: 0;\n//   }\n// `\n\n// const flash = keyframes`\n//   from {\n//       opacity: 0;\n//       }\n\n//       to {\n//       opacity: 1;\n//       }\n// `;\n\nconst ToggleThemeContainer = styled(motion.div)`\n position: fixed;\n /* background-color: brown; */\n background: ${({ theme }) => theme.text};\n /* width: 100px;\n height: 100px; */\n /* bottom: 2rem;\n left: 2rem; */\n top: 0.5rem;\n /* right: 5rem; */\n right: 9rem;\n display: flex;\n align-items: center;\n justify-content: center;\n background-color:transparent;\n z-index: 3000;\n\n @media (min-width: 768px) {\n    /* right: 2rem; */\n    right: 23px;\n    top: 1.56rem;\n  }\n\n  @media ( min-width: 1200px) {\n    right: calc(( (100% - 1100px) / 2) - 70px);\n   }\n`;\nconst GearButton = styled.button`\nborder: none;\n/* width: 44px;\nheight: 44px; */\nwidth: 32px;\nheight: 32px;\n\nwidth: 84px;\nheight: 44px;\n\n\ncursor: pointer;\noverflow: hidden;\nborder: none;\nborder-radius: 50%;\nbackground-color: transparent;\noutline: 0px;\nfont-size: 100%;\nline-height: 1.15;\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\nbackdrop-filter: blur(20px);\ntransition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\nborder-radius: 49px;\n    padding: 6.5px;\n    /* border: 1px solid ${({ theme }) => theme.themeToggleButtonBorder}; */\n    background-color: transparent;\n\n\n    background-color: ${({ theme }) =>\n    theme === 'light' ? 'rgba(0,0,0,.07)' : `rgba(255, 255, 255, 0.11)`};\n\n  /* box-shadow: inset 0px -1px 1px ${({ theme }) => theme.navShadowColor} !important; */\n position: relative;\n  .icon-container {\n      width: 36px;\n      height: 36px;\n      border-radius: 50%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      margin: 0px;\n       /* background-color: orange; */\n  }\n  .left {\n    background-color: ${({ theme }) =>\n    theme === 'light' ? 'white' : `transparent`};\n  }\n  .right {\n    background-color: ${({ theme }) =>\n    theme === 'light' ? `transparent` : 'white' };\n  }\n  &:hover{\n      outline: none;\n      /* transform: rotate(180deg); */\n      /* background-color: green; */\n  }\n  &:focus {\n    outline: 0 !important;\n    /* border: none; */\n}\n&:before {\n    transition: transform .2s ease-in-out;\n    /* will-change: transform; */\n    /* width: 36px; */\n    /* height: calc(100% - 8px); */\n    position: absolute;\n    /* left: 4px; */\n    /* top: 4px; */\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    display: block;\n    border-radius: 9999px;\n    content: \"\";\n    /* background-color: #fff; */\n    box-shadow: 0 2px 8px 0 rgb(0 34 255 / 8%), 0 2px 8px 0 rgb(0 11 80 / 12%);\n}\n`\n\nconst Effect = styled.div`\n    position: absolute;\n    left: ${({ theme }) =>\n    theme === 'light' ? '4px' : `40px`};;\n    width: 40px;\n      height: 40px;\n      border-radius: 50%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      margin: 0px;\n      background: white;\n      background: #00000030;\n      backdrop-filter: blur(20px);\n      pointer-events:  none;\n      opacity: 1;\n      z-index: -1;\n      transition: all .2s ease-out;\n      /* animation: ${props =>\n    props.animate &&\n    css`\n      ${fadeIn} 0.2s linear 3\n    `}; */\n`\n\nconst Settings = ({theme,  toggleTheme }) => {\n    /* const [doAnimate, setDoAnimate] = useState(false); */\n    return (\n        <ToggleThemeContainer >\n            <GearButton \n            theme={theme}\n            onClick={toggleTheme}>\n    \n        <div className=\"icon-container left\">\n            <LightIcon/>\n        </div>\n        <div className=\"icon-container right\">\n            <DarkIcon />\n        </div>\n                \n                {/* {theme === 'light' ? <LightIcon/> : <DarkIcon /> } */}\n\n                <Effect \n                theme={theme}\n                />\n\n            </GearButton>\n            \n        </ToggleThemeContainer>\n    )\n}\n\nexport default Settings\n"]},"metadata":{},"sourceType":"module"}